"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const handlebars_1 = __importDefault(require("handlebars"));
const fs_1 = require("fs");
const fs_extra_1 = __importDefault(require("fs-extra"));
const base_1 = require("./base");
class KnexGenerator extends base_1.BaseGenerator {
    async generate() {
        await fs_extra_1.default.ensureDir(this.outDir + '/migrations');
        await this.generateMigration();
        await fs_extra_1.default.copy(`${this.templatesDir}/migrate.js`, `${this.outDir}/migrate.js`);
    }
    async generateMigration() {
        for (const file of this.templateFiles) {
            if (file.includes('000-init.hbs')) {
                const hbsData = await fs_1.promises.readFile(file, 'utf8');
                const template = handlebars_1.default.compile(hbsData);
                const templateData = {
                    models: this.defs.models
                };
                const content = template(templateData);
                const outPath = `${this.outDir}/migrations/000-init.js`;
                await fs_1.promises.writeFile(outPath, this.prettify(content, outPath), 'utf8');
            }
        }
    }
}
exports.KnexGenerator = KnexGenerator;
//# sourceMappingURL=knex.js.map